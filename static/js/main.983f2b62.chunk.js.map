{"version":3,"sources":["Headers.js","ItemCard.jsx","Content.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","status","danger","root","flexGrow","marginLeft","spacing","menuButton","marginRight","title","Headers","classes","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","align","Button","color","fontSize","pos","marginBottom","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","purple","palette","getContrastText","deepPurple","ItemCard","props","expanded","setExpanded","subtitle","data","price","description","imgSrc","ingredients","Card","CardHeader","Avatar","action","subheader","CardMedia","image","CardContent","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Content","Grid","container","direction","justify","alignItems","item","xs","sm","Date","App","window","location","hostname","match","createMuiTheme","primary","light","main","dark","contrastText","secondary","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.983f2b62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(3),\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  }));\r\n  \r\n\r\nconst Headers = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    //update menu\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n      <AppBar className=\"Appbar\" position =\"static\">\r\n        <Toolbar>\r\n          <IconButton \r\n            edge=\"start\" \r\n            className={classes.menuButton}  \r\n            aria-label=\"menu\"\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>Papular</MenuItem>\r\n            <MenuItem onClick={handleClose}>Sashimi</MenuItem>\r\n            <MenuItem onClick={handleClose}>Sushi</MenuItem>\r\n            <MenuItem onClick={handleClose}>Maki Roll</MenuItem>\r\n            <MenuItem onClick={handleClose}>KOTO Chef Special - Mki Roll</MenuItem>\r\n            <MenuItem onClick={handleClose}>Soup & Salad</MenuItem>\r\n            <MenuItem onClick={handleClose}>Appetizer</MenuItem>\r\n            <MenuItem onClick={handleClose}>Bento Box & Tempura</MenuItem>\r\n            <MenuItem onClick={handleClose}>Ramen&Udon</MenuItem>\r\n            <MenuItem onClick={handleClose}>Beverages</MenuItem>\r\n          </Menu>\r\n          <Typography variant=\"h6\" className={classes.title} align=\"center\">\r\n            <b>Welecome to TOKO Sushi</b>\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick=\"{Login}\">Login</Button>\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Headers;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { red, deepPurple } from '@material-ui/core/colors';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[900]),\r\n      backgroundColor: deepPurple[900],\r\n    },\r\n  }));\r\n\r\nconst ItemCard =(props) =>{\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    //get data\r\n    const {title, subtitle, data, price, description, imgSrc, ingredients} = props;\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n\r\n    return (\r\n       <Card className={classes.root}>\r\n       <CardHeader\r\n        avatar={\r\n          <Avatar className={classes.purple} aria-label=\"Special\">SP</Avatar>\r\n        }\r\n        action ={\r\n          <IconButton color=\"primary\" aria-label=\"add one\">\r\n            <AddIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={data}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={imgSrc}\r\n        title={title}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n         {subtitle}, {price}/set\r\n        </Typography>    \r\n      <CardActions disableSpacing>      \r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"Detail\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      </CardContent>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Ingredients:</Typography>\r\n          <Typography paragraph>\r\n            {description}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            {ingredients}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ItemCard;","import React from 'react';\r\nimport ItemCard from './ItemCard';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\nconst Content =() =>{\r\n    const classes = useStyles();\r\n   return (\r\n    <div className={classes.root}>\r\n       <Grid container spacing ={4}\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"flex-start\"\r\n        >\r\n           <Grid item xs={12} sm={6} >\r\n           <ItemCard \r\n           title=\"Mother's Day Special\" \r\n           subtitle = \"Limited offer\" \r\n           data= {Date} \r\n           price = \"120 CAD\"\r\n           description = \"It's party combo for Mother's day. It's good for 4-5 people.\"\r\n           //temp\r\n           imgSrc=\"https://imgur.com/HpkGimC.jpg\"\r\n           ingredients = \"rice, fish, and so on.....\"\r\n           />\r\n           </Grid>\r\n           <Grid item xs={12} sm={6} >\r\n           <ItemCard \r\n           title=\"Mother's Day Special -2\" \r\n           subtitle = \"Limited offer\" \r\n           data= {Date} \r\n           price = \"120 CAD\"\r\n           description = \"It's party combo for Mother's day. It's good for 4-5 people.\"\r\n           imgSrc=\"https://imgur.com/9gDlsAd.jpg\"\r\n           ingredients = \"rice, fish, and so on.....\"\r\n           />\r\n           </Grid>\r\n           <Grid item xs={12} sm={6} >\r\n           <ItemCard \r\n           title=\"Mother's Day Special\" \r\n           subtitle = \"Limited offer\" \r\n           data= {Date} \r\n           price = \"120 CAD\"\r\n           description = \"It's party combo for Mother's day. It's good for 4-5 people.\"\r\n           //imgSrc=\r\n           ingredients = \"rice, fish, and so on.....\"\r\n           />\r\n           </Grid>\r\n       </Grid>  \r\n    </div>\r\n   );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\nimport { Grid } from '@material-ui/core/';\r\nimport Headers from \"./Headers\";\r\nimport Content from \"./Content\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  \r\n    return (\r\n     <Grid container spacing={3} direction=\"column\">\r\n      <Grid item > \r\n        <Headers />\r\n      </Grid>\r\n      <Grid container justify=\"center\" > \r\n       <Grid item xs={false} sm={2}/>\r\n       <Grid item xs={12} sm={8}>\r\n         <Content />\r\n       </Grid>\r\n       <Grid item xs={false} sm={2}>\r\n       </Grid>\r\n      </Grid>\r\n     </Grid>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary:{\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#ffffff'\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000000'\r\n    }\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider >\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}